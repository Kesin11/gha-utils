name: Release test
on:
  push:
    branches:
      - publish_jsr
  workflow_dispatch:
    inputs:
        prerelease_suffix:
          description: 'pre-release suffix. ex: 0.1.0-a1'
          required: true

jobs:
  draft_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      tag_name: ${{ steps.release-drafter.outputs.tag_name }}
    steps:
      # Get next version
      - uses: release-drafter/release-drafter@3f0f87098bd6b5c5b9a36d49c41d998ea58f9348 # v6.0.0
        id: release-drafter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  prerelease:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    if: github.event_name == 'workflow_dispatch'
    needs: draft_release
    steps:
      # Create version string from tag (v1.0.0 -> 1.0.0)
      - name: Create version string
        run: |
          export TAG_NAME=${{ needs.draft_release.outputs.tag_name }}
          echo "VERSION=${TAG_NAME:1}" >> $GITHUB_ENV
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Setup git config
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Update deno.jsonc version and commit
        run: |
          jq '.version = "${{ env.VERSION }}-${{ env.PRERELEASE_SUFFIX }}"' deno.jsonc > temp.jsonc && mv temp.jsonc deno.jsonc
          git add deno.jsonc
          git commit -m "chore: release v${VERSION}-${PRERELEASE_SUFFIX}"
        env:
            PRERELEASE_SUFFIX: ${{ inputs.prerelease_suffix }}
      - name: Publish package and git push
        run: |
          npx jsr publish
          git push origin HEAD
